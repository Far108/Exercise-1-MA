/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package at.ac.fhcampuswien

class App {
    // Game logic for a number guessing game
    fun playNumberGame(digitsToGuess: Int = 4) {
        //TODO: build a menu which calls the functions and works with the return values
        val randomNumber = generateRandomNonRepeatingNumber(digitsToGuess)
        println("Welcome to number guessing game.")
        println("I'll think of a number and you have to guess it.")
        println("I am thinking of a number: $randomNumber")

        // here starts game loop. It will run until the game will be ended, or an error will be occured
        while (true){
            print("User input: ")
            // reading user input and checking it for null statement.
            // If not null, converting it to integer
            val userInput: Int? = readlnOrNull()?.toIntOrNull()
            if(userInput !is Int) {
                println("Input must be numeric and not to be null!")
                continue
            }

            val comparationResult = checkUserInputAgainstGeneratedNumber(userInput, randomNumber)
            println("User input: $userInput, ${comparationResult.toString()}")

            // checking if user have guessed the number
            if(digitsToGuess == comparationResult.m && digitsToGuess == comparationResult.n){
                break
            }
        }
    }

    /**
     * Generates a non-repeating number of a specified length between 1-9.
     *
     * Note: The function is designed to generate a number where each digit is unique and does not repeat.
     * It is important to ensure that the length parameter does not exceed the maximum possible length
     * for non-repeating digits (which is 9 excluding 0 for base-10 numbers).
     *
     * @param length The length of the non-repeating number to be generated.
     *               This dictates how many digits the generated number will have.
     * @return An integer of generated non-repeating number.
     *         The generated number will have a number of digits equal to the specified length and will
     *         contain unique, non-repeating digits.
     * @throws IllegalArgumentException if the length is more than 9 or less than 1.
     */
    val generateRandomNonRepeatingNumber: (Int) -> Int = { length ->
        //TODO implement the function
        //0  return value is a placeholder
        if(length !in (1..9)){
            throw IllegalArgumentException("Length is more than 9 or lower than 1")
        }

        // we are converting the range to a list
        // than we are mixing it with shuffled()
        // then we are taking 'length' amount of elements from the list
        // converting new array to the string and then to int
        val randomDigits = (1..9).toList().shuffled().take(length).joinToString("").toInt()

        randomDigits
    }

    /**
     * Compares the user's input integer against a generated number for a guessing game.
     * This function evaluates how many digits the user guessed correctly and how many of those
     * are in the correct position. The game generates number with non-repeating digits.
     *
     * Note: The input and the generated number must both be numbers.
     * If the inputs do not meet these criteria, an IllegalArgumentException is thrown.
     *
     * @param input The user's input integer. It should be a number with non-repeating digits.
     * @param generatedNumber The generated number with non-repeating digits to compare against.
     * @return [CompareResult] with two properties:
     *         1. `n`: The number of digits guessed correctly (regardless of their position).
     *         2. `m`: The number of digits guessed correctly and in the correct position.
     *         The result is formatted as "Output: m:n", where "m" and "n" represent the above values, respectively.
     * @throws IllegalArgumentException if the inputs do not have the same number of digits.
     */
    val checkUserInputAgainstGeneratedNumber: (Int, Int) -> CompareResult = { input, generatedNumber ->
        //TODO implement the function
        //CompareResult(0, 0) return value is a placeholder
        // converting all arguments to string and then to list
        val stringInput = input.toString().toList()
        // removing duplicates
        val uniqueInput = stringInput.toSet().toList()
        val stringGeneratedNumber = generatedNumber.toString().toList()

        if(stringInput.size != stringGeneratedNumber.size){
            throw IllegalArgumentException("Arguments do not have same length")
        }

        var n = 0
        var m = 0

        for(i in stringGeneratedNumber.indices){
            if(stringInput[i] == stringGeneratedNumber[i]){
                m++
            }
            if(uniqueInput.getOrNull(i) in stringGeneratedNumber){
                n++
            }
        }

        CompareResult(n, m)
    }
}

fun main() {
    println("Hello World!")
    // TODO: call the App.playNumberGame function with and without default arguments
    val c1 = App()
    c1.playNumberGame()
    c1.playNumberGame(6)
}
